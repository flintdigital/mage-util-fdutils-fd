*********************************************
* How to use:				    *
*********************************************
Make sure the script has execution permissions
At shell run:
./fd_media_backup.sh {magento_root_dir} {s3_bucket_name} {hourly|daily_m|daily_w|single|monthly}

{magento_root_dir} -> The folder which has the folders app/, media/, var/, skin/.
{s3_bucket_name}   -> The S3 Bucket Name that will be used for the backups. Something like domain.com-mediabackup is always a good name.
{hourly|daily_m|daily_w|single|monthly}  -> The type of backup file. 
		If hourly, it will create a file called dbname_hourly_n.tar.gz. Where "n" is the current hour (24 hour format) (1 am is 1, not 01) 
		If daily_m, it will create a file called dbname_daily_m_nn.tar.gz. Where "nn" is the day of the month
		If daily_w, it will create a file called dbname_daily_w_n.tar.gz. Where "n" is the day of the week
		If single, it will create a file called dbname_single.tar.gz
		If monthly, it will create a file called dbname_monthly_nn.tar.gz. Where "nn" is the current month


*********************************************
* In case we need to Recover:		    *
*********************************************

cd ~/public_html
cat app/etc/local.xml
s3cmd ls
s3cmd ls BUCKET
s3cmd get BUCKET/FILE
mysql -uUSER -p
	create database cpaneluser_dbname
	source FILE
vi app/etc/local.xml
	change DB NAME
rm -rf var/cache

#Go to Magento Root dir
cd ~/public_html
#Get the DB CREDS
cat app/etc/local.xml
#Check which bucket to use
s3cmd ls
#Check which file to restore
s3cmd ls BUCKET
#Get the restore file
s3cmd get BUCKET/FILE
#Go to Mysql
mysql -uUSER -p
	#Create new DB at cpanel if this can't be done
	create database cpaneluser_dbname
	#Import the DB
	source FILE
#Set the new DB at the local.xml file
vi app/etc/local.xml
	change DB NAME
#Clear cache
rm -rf var/cache


